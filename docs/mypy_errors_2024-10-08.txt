nlp/entities.py:13: error: Unused "type: ignore" comment  [unused-ignore]
tests/test_esco.py:116: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
ingest/extractors.py:254: error: Unused "type: ignore" comment  [unused-ignore]
ingest/extractors.py:521: error: Need type annotation for "classes"  [var-annotated]
utils/telemetry.py:114: error: Argument 1 to "OTLPSpanExporter" has incompatible type "**dict[str, object]"; expected "str | None"  [arg-type]
utils/telemetry.py:114: error: Argument 1 to "OTLPSpanExporter" has incompatible type "**dict[str, object]"; expected "bool | None"  [arg-type]
utils/telemetry.py:114: error: Argument 1 to "OTLPSpanExporter" has incompatible type "**dict[str, object]"; expected "Sequence[tuple[str, str]] | dict[str, str] | str | None"  [arg-type]
utils/telemetry.py:114: error: Argument 1 to "OTLPSpanExporter" has incompatible type "**dict[str, object]"; expected "int | None"  [arg-type]
utils/telemetry.py:123: error: Argument 1 to "OTLPSpanExporter" has incompatible type "**dict[str, object]"; expected "str | None"  [arg-type]
utils/telemetry.py:123: error: Argument 1 to "OTLPSpanExporter" has incompatible type "**dict[str, object]"; expected "dict[str, str] | None"  [arg-type]
utils/telemetry.py:123: error: Argument 1 to "OTLPSpanExporter" has incompatible type "**dict[str, object]"; expected "int | None"  [arg-type]
utils/telemetry.py:123: error: Argument 1 to "OTLPSpanExporter" has incompatible type "**dict[str, object]"; expected "Compression | None"  [arg-type]
utils/telemetry.py:123: error: Argument 1 to "OTLPSpanExporter" has incompatible type "**dict[str, object]"; expected "Session | None"  [arg-type]
tests/ingest/test_extractors_fetch_url.py:29: error: Argument "response" to "HTTPError" has incompatible type "DummyResponse"; expected "Response | None"  [arg-type]
tests/test_wizard_tools_execution.py:19: error: Unused "type: ignore" comment  [unused-ignore]
tests/test_wizard_tools_execution.py:29: error: The return type of a generator function should be "Generator" or one of its supertypes  [misc]
tests/test_model_routing.py:20: error: The return type of a generator function should be "Generator" or one of its supertypes  [misc]
tests/test_config.py:15: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_config.py:29: error: Unused "type: ignore" comment  [unused-ignore]
cli/rebuild_vector_store.py:26: error: Argument "after" to "list" of "Files" has incompatible type "str | None"; expected "str | Omit"  [arg-type]
cli/rebuild_vector_store.py:59: error: Unexpected keyword argument "embedding_model" for "create" of "VectorStores"  [call-arg]
/root/.pyenv/versions/3.11.12/lib/python3.11/site-packages/openai/resources/vector_stores/vector_stores.py:78: note: "create" of "VectorStores" defined here
openai_utils/api.py:1240: error: Incompatible types in assignment (expression has type "bool", target has type "Collection[str]")  [assignment]
openai_utils/api.py:1242: error: Incompatible types in assignment (expression has type "bool", target has type "Collection[str]")  [assignment]
openai_utils/api.py:1244: error: Incompatible types in assignment (expression has type "bool", target has type "Collection[str]")  [assignment]
openai_utils/api.py:1269: error: Name "format_config" already defined on line 1231  [no-redef]
openai_utils/api.py:1278: error: Incompatible types in assignment (expression has type "bool", target has type "Collection[str]")  [assignment]
openai_utils/api.py:1280: error: Incompatible types in assignment (expression has type "bool", target has type "Collection[str]")  [assignment]
openai_utils/api.py:1282: error: Incompatible types in assignment (expression has type "bool", target has type "Collection[str]")  [assignment]
openai_utils/api.py:1365: error: Incompatible types in assignment (expression has type "ResponseTextDeltaEvent | ResponseTextDoneEvent[Any] | ResponseFunctionCallArgumentsDeltaEvent | ResponseCompletedEvent[Any] | ResponseAudioDeltaEvent | <49 more items>", variable has type "ChunkEvent | ContentDeltaEvent | ContentDoneEvent[Any] | RefusalDeltaEvent | RefusalDoneEvent | <6 more items>")  [assignment]
openai_utils/api.py:1365: note: Items in the first union not in the second: "ResponseTextDeltaEvent", "ResponseTextDoneEvent[Any]", "ResponseFunctionCallArgumentsDeltaEvent", "ResponseCompletedEvent[Any]", "ResponseAudioDeltaEvent", "ResponseAudioDoneEvent", "ResponseAudioTranscriptDeltaEvent", "ResponseAudioTranscriptDoneEvent", "ResponseCodeInterpreterCallCodeDeltaEvent", "ResponseCodeInterpreterCallCodeDoneEvent", "ResponseCodeInterpreterCallCompletedEvent", "ResponseCodeInterpreterCallInProgressEvent", "ResponseCodeInterpreterCallInterpretingEvent", "ResponseContentPartAddedEvent", "ResponseContentPartDoneEvent", "ResponseCreatedEvent", "ResponseErrorEvent", "ResponseFileSearchCallCompletedEvent", "ResponseFileSearchCallInProgressEvent", "ResponseFileSearchCallSearchingEvent", "ResponseFunctionCallArgumentsDoneEvent", "ResponseInProgressEvent", "ResponseFailedEvent", "ResponseIncompleteEvent", "ResponseOutputItemAddedEvent", "ResponseOutputItemDoneEvent", "ResponseRefusalDeltaEvent", "ResponseRefusalDoneEvent", "ResponseTextDoneEvent[None]", "ResponseWebSearchCallCompletedEvent", "ResponseWebSearchCallInProgressEvent", "ResponseWebSearchCallSearchingEvent", "ResponseReasoningSummaryPartAddedEvent", "ResponseReasoningSummaryPartDoneEvent", "ResponseReasoningSummaryTextDeltaEvent", "ResponseReasoningSummaryTextDoneEvent", "ResponseImageGenCallCompletedEvent", "ResponseImageGenCallInProgressEvent", "ResponseImageGenCallGeneratingEvent", "ResponseImageGenCallPartialImageEvent", "ResponseMcpCallCompletedEvent", "ResponseMcpCallArgumentsDeltaEvent", "ResponseMcpCallArgumentsDoneEvent", "ResponseMcpCallFailedEvent", "ResponseMcpCallInProgressEvent", "ResponseMcpListToolsCompletedEvent", "ResponseMcpListToolsFailedEvent", "ResponseMcpListToolsInProgressEvent", "ResponseOutputTextAnnotationAddedEvent", "ResponseQueuedEvent", "ResponseReasoningTextDeltaEvent", "ResponseReasoningTextDoneEvent", "ResponseCustomToolCallInputDeltaEvent", "ResponseCustomToolCallInputDoneEvent"
openai_utils/api.py:1370: error: Incompatible types in assignment (expression has type "ParsedResponse[Any]", variable has type "ParsedChatCompletion[Any]")  [assignment]
openai_utils/api.py:1449: error: Name "chunks" already defined on line 1426  [no-redef]
llm/openai_responses.py:139: error: Unused "type: ignore" comment  [unused-ignore]
llm/openai_responses.py:153: error: Argument 2 to "set_attribute" of "Span" has incompatible type "Any | None"; expected "str | bool | int | float | Sequence[str] | Sequence[bool] | Sequence[int] | Sequence[float]"  [arg-type]
utils/normalization.py:25: error: Incompatible types in assignment (expression has type "None", variable has type Module)  [assignment]
utils/normalization.py:794: error: Unused "type: ignore" comment  [unused-ignore]
utils/normalization.py:794: error: Item "Mapping[str, Any]" of "Mapping[str, Any] | NeedAnalysisProfile" has no attribute "model_dump"  [union-attr]
utils/normalization.py:794: note: Error code "union-attr" not covered by "type: ignore" comment
models/need_analysis.py:198: error: Argument 1 has incompatible type "Callable[[type[Requirements], Requirements], Requirements]"; expected "Callable[[Never, ValidationInfo[Any]], Never] | Callable[[Never], Never]"  [arg-type]
tests/test_aliases.py:20: error: Unused "type: ignore" comment  [unused-ignore]
pages/07_interview.py:19: error: Incompatible types in assignment (expression has type "tuple[()]", variable has type "tuple[str]")  [assignment]
pages/07_interview.py:20: error: Incompatible types in assignment (expression has type "tuple[str, ...]", variable has type "tuple[str, str, str, str, str]")  [assignment]
pages/06_benefits.py:23: error: Incompatible types in assignment (expression has type "tuple[str, ...]", variable has type "tuple[str, str, str, str, str, str, str, str]")  [assignment]
pages/05_skills.py:19: error: Incompatible types in assignment (expression has type "tuple[str, ...]", variable has type "tuple[str]")  [assignment]
pages/05_skills.py:26: error: Incompatible types in assignment (expression has type "tuple[str, ...]", variable has type "tuple[str, str, str, str, str]")  [assignment]
pages/04_role_tasks.py:24: error: Incompatible types in assignment (expression has type "tuple[str, ...]", variable has type "tuple[str, str]")  [assignment]
pages/04_role_tasks.py:31: error: Incompatible types in assignment (expression has type "tuple[str, ...]", variable has type "tuple[str, str, str, str, str, str, str, str, str, str]")  [assignment]
pages/03_team.py:27: error: Incompatible types in assignment (expression has type "tuple[str, ...]", variable has type "tuple[str, str, str, str, str, str, str, str, str, str, str, str]")  [assignment]
pages/02_company.py:23: error: Incompatible types in assignment (expression has type "tuple[str, ...]", variable has type "tuple[str]")  [assignment]
pages/02_company.py:33: error: Incompatible types in assignment (expression has type "tuple[str, ...]", variable has type "tuple[str, str, str, str, str, str, str, str, str]")  [assignment]
tests/test_task_suggestions.py:40: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_schema.py:204: error: Argument "source_url" to "SourceAttribution" has incompatible type "str"; expected "HttpUrl | None"  [arg-type]
tests/test_model_selection.py:215: error: Argument "response" to "BadRequestError" has incompatible type "SimpleNamespace"; expected "Response"  [arg-type]
tests/test_model_selection.py:246: error: Unused "type: ignore" comment  [unused-ignore]
tests/test_model_selection.py:261: error: "object" has no attribute "__iter__"; maybe "__dir__" or "__str__"? (not iterable)  [attr-defined]
tests/test_model_selection.py:276: error: Unused "type: ignore" comment  [unused-ignore]
tests/test_model_selection.py:303: error: Unused "type: ignore" comment  [unused-ignore]
tests/test_generate_job_ad.py:20: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_extract_company_info.py:41: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_extract_company_info.py:87: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_company_fields.py:53: error: Argument "logo_url" to "Company" has incompatible type "str"; expected "HttpUrl | None"  [arg-type]
ingest/heuristics.py:1878: error: Item "None" of "str | None" has no attribute "strip"  [union-attr]
tests/test_openai_utils.py:87: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:163: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:198: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:242: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:283: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:422: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:507: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:528: error: Need type annotation for "output" (hint: "output: list[<type>] = ...")  [var-annotated]
tests/test_openai_utils.py:547: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:574: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:585: error: Need type annotation for "output" (hint: "output: list[<type>] = ...")  [var-annotated]
tests/test_openai_utils.py:621: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:761: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:828: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:831: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:833: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:875: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1026: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1247: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1250: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1252: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1274: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1277: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1279: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1303: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1306: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1308: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1330: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1333: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1335: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1361: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1364: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1366: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1394: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1397: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1399: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1453: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1486: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1487: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1490: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1557: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1590: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1591: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1594: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1644: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1794: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1824: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1872: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1920: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:1991: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:2055: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:2167: error: Need type annotation for "output" (hint: "output: list[<type>] = ...")  [var-annotated]
tests/test_openai_utils.py:2209: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:2230: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:2254: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:2278: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:2298: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_openai_utils.py:2378: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_extraction_rheinbahn.py:37: error: Unsupported right operand type for in ("object")  [operator]
tests/test_extraction_rheinbahn.py:38: error: Unsupported right operand type for in ("object")  [operator]
openai_utils/extraction.py:267: error: Unused "type: ignore" comment  [unused-ignore]
openai_utils/extraction.py:1951: error: Argument 1 to "append" of "list" has incompatible type "tuple[str, str, str, str | list[str] | None]"; expected "tuple[str, str, str, str | list[str]]"  [arg-type]
openai_utils/extraction.py:2002: error: Argument 1 to "_contains_gender_marker" has incompatible type "str | list[str]"; expected "str"  [arg-type]
openai_utils/extraction.py:2208: error: Incompatible types in assignment (expression has type "dict[str, str]", variable has type "tuple[str, str, str, str | list[str]]")  [assignment]
openai_utils/extraction.py:2209: error: "tuple[str, str, str, str | list[str]]" has no attribute "get"  [attr-defined]
openai_utils/extraction.py:2210: error: "tuple[str, str, str, str | list[str]]" has no attribute "get"  [attr-defined]
wizard/_layout.py:121: error: Redundant cast to "T"  [redundant-cast]
wizard/_layout.py:604: error: No overload variant matches argument type "dict[str, object]"  [call-overload]
wizard/_layout.py:604: note: Possible overload variants:
wizard/_layout.py:604: note:     def text_area(self, label: str, value: str = ..., height: Literal['stretch', 'content'] | int | None = ..., max_chars: int | None = ..., key: str | int | None = ..., help: str | None = ..., on_change: Callable[..., None] | None = ..., args: tuple[Any, ...] | list[Any] | None = ..., kwargs: dict[str, Any] | None = ..., *, placeholder: str | None = ..., disabled: bool = ..., label_visibility: Literal['visible', 'hidden', 'collapsed'] = ..., width: int | Literal['stretch'] = ...) -> str
wizard/_layout.py:604: note:     def text_area(self, label: str, value: SupportsStr | None = ..., height: Literal['stretch', 'content'] | int | None = ..., max_chars: int | None = ..., key: str | int | None = ..., help: str | None = ..., on_change: Callable[..., None] | None = ..., args: tuple[Any, ...] | list[Any] | None = ..., kwargs: dict[str, Any] | None = ..., *, placeholder: str | None = ..., disabled: bool = ..., label_visibility: Literal['visible', 'hidden', 'collapsed'] = ..., width: int | Literal['stretch'] = ...) -> str | None
tests/test_pipeline_json_schema.py:62: error: Value of type "Any | None" is not indexable  [index]
tests/test_pipeline_json_schema.py:63: error: Value of type "Any | None" is not indexable  [index]
tests/test_pipeline_json_schema.py:64: error: Value of type "Any | None" is not indexable  [index]
tests/test_pipeline_json_schema.py:80: error: Value of type "Any | None" is not indexable  [index]
tests/test_pipeline_json_schema.py:81: error: Value of type "Any | None" is not indexable  [index]
tests/test_pipeline_json_schema.py:122: error: Value of type "Any | None" is not indexable  [index]
tests/test_pipeline_json_schema.py:123: error: Value of type "Any | None" is not indexable  [index]
tests/test_pipeline_json_schema.py:139: error: Value of type "Any | None" is not indexable  [index]
tests/test_pipeline_json_schema.py:140: error: Value of type "Any | None" is not indexable  [index]
tests/test_pipeline_json_schema.py:156: error: Value of type "Any | None" is not indexable  [index]
tests/test_pipeline_json_schema.py:157: error: Value of type "Any | None" is not indexable  [index]
tests/test_pipeline_json_schema.py:173: error: Value of type "Any | None" is not indexable  [index]
tests/test_pipeline_json_schema.py:174: error: Value of type "Any | None" is not indexable  [index]
tests/test_model_router.py:52: error: Unused "type: ignore" comment  [unused-ignore]
tests/test_model_router.py:61: error: Argument 1 to "pick_model" has incompatible type "FakeOpenAIClient"; expected "OpenAI"  [arg-type]
tests/test_model_router.py:72: error: Argument 1 to "pick_model" has incompatible type "FakeOpenAIClient"; expected "OpenAI"  [arg-type]
tests/test_model_router.py:83: error: Argument 1 to "pick_model" has incompatible type "FakeOpenAIClient"; expected "OpenAI"  [arg-type]
tests/test_model_router.py:93: error: Argument 1 to "pick_model" has incompatible type "FakeOpenAIClient"; expected "OpenAI"  [arg-type]
tests/test_model_router.py:104: error: Argument 1 to "pick_model" has incompatible type "FakeOpenAIClient"; expected "OpenAI"  [arg-type]
tests/test_model_router.py:116: error: Argument 1 to "pick_model" has incompatible type "FakeOpenAIClient"; expected "OpenAI"  [arg-type]
tests/test_model_router.py:117: error: Argument 1 to "pick_model" has incompatible type "FakeOpenAIClient"; expected "OpenAI"  [arg-type]
tests/test_llm_client.py:79: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_llm_client.py:105: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_llm_client.py:119: error: Incompatible types in assignment (expression has type "dict[str, str]", target has type "str | list[dict[str, str]]")  [assignment]
tests/test_heuristics.py:226: error: "LogRecord" has no attribute "heuristic_rule"  [attr-defined]
tests/test_heuristics.py:240: error: "LogRecord" has no attribute "heuristic_rule"  [attr-defined]
tests/test_heuristics.py:398: error: Unsupported right operand type for in ("object")  [operator]
tests/test_heuristics.py:399: error: Unsupported right operand type for in ("object")  [operator]
tests/test_gap_analysis_llm.py:44: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_gap_analysis_llm.py:72: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_gap_analysis_llm.py:73: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_gap_analysis_llm.py:145: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
components/requirements_insights.py:320: error: Argument 1 to "float" has incompatible type "object"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
components/requirements_insights.py:321: error: Argument 1 to "float" has incompatible type "object"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
tests/test_skill_suggestions.py:44: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests/test_requirements_insights.py:89: error: Value of type "object" is not indexable  [index]
tests/test_requirements_insights.py:92: error: Value of type "object" is not indexable  [index]
sidebar/salary.py:183: error: Function "call_chat_api" could always be true in boolean context  [truthy-function]
sidebar/salary.py:183: error: Function "build_extraction_tool" could always be true in boolean context  [truthy-function]
sidebar/salary.py:366: error: Incompatible types in assignment (expression has type "list[Any] | tuple[Any, ...] | set[Any]", variable has type "ValuesView[Any]")  [assignment]
sidebar/salary.py:368: error: Incompatible types in assignment (expression has type "list[object]", variable has type "ValuesView[Any]")  [assignment]
tests/test_ask_followups.py:44: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
wizard_router.py:229: error: Invalid index type "object" for "dict[str, WizardPage]"; expected type "str"  [index]
wizard_router.py:254: error: Unused "type: ignore" comment  [unused-ignore]
wizard_router.py:457: error: Module "wizard" has no attribute "CRITICAL_SECTION_ORDER"  [attr-defined]
wizard_router.py:457: error: Module "wizard" has no attribute "FIELD_SECTION_MAP"  [attr-defined]
wizard_router.py:457: error: Module "wizard" has no attribute "get_missing_critical_fields"  [attr-defined]
tests/test_wizard_source.py:21: error: Module "wizard" has no attribute "on_file_uploaded"  [attr-defined]
tests/test_wizard_source.py:21: error: Module "wizard" has no attribute "on_url_changed"  [attr-defined]
tests/test_wizard_source.py:21: error: Module "wizard" has no attribute "_field_lock_config"  [attr-defined]
tests/test_wizard_source.py:21: error: Module "wizard" has no attribute "_maybe_run_extraction"  [attr-defined]
tests/test_wizard_source.py:21: error: Module "wizard" has no attribute "_step_onboarding"  [attr-defined]
tests/test_wizard_source.py:21: error: Module "wizard" has no attribute "_extract_and_summarize"  [attr-defined]
tests/test_wizard_source.py:21: error: Module "wizard" has no attribute "_prime_widget_state_from_profile"  [attr-defined]
tests/test_wizard_source.py:807: error: Incompatible types in assignment (expression has type "dict[str, str]", target has type "str | None")  [assignment]
tests/test_wizard_source.py:821: error: Non-overlapping equality check (left operand type: "str | None", right operand type: "dict[str, str]")  [comparison-overlap]
tests/test_wizard_skip_and_reask.py:7: error: Module "wizard" has no attribute "_skip_source"  [attr-defined]
tests/test_wizard_skip_and_reask.py:7: error: Module "wizard" has no attribute "_extract_and_summarize"  [attr-defined]
tests/test_wizard_skip_and_reask.py:7: error: Module "wizard" has no attribute "_advance_from_onboarding"  [attr-defined]
tests/test_wizard_skip_and_reask.py:7: error: Module "wizard" has no attribute "COMPANY_STEP_INDEX"  [attr-defined]
tests/test_wizard_skip_and_reask.py:7: error: Module "wizard" has no attribute "CRITICAL_SECTION_ORDER"  [attr-defined]
tests/test_wizard_skip_and_reask.py:7: error: Module "wizard" has no attribute "next_step"  [attr-defined]
tests/test_wizard_requirements.py:11: error: Module "wizard" has no attribute "_render_skill_board"  [attr-defined]
tests/test_wizard_requirements.py:11: error: Module "wizard" has no attribute "_skill_board_labels"  [attr-defined]
tests/test_wizard_requirements.py:11: error: Module "wizard" has no attribute "_step_requirements"  [attr-defined]
tests/test_wizard_requirements.py:82: error: Argument 1 to "contextmanager" has incompatible type "Callable[[VarArg(object), KwArg(object)], None]"; expected "Callable[[VarArg(object), KwArg(object)], Iterator[Never]]"  [arg-type]
tests/test_wizard_requirements.py:83: error: The return type of a generator function should be "Generator" or one of its supertypes  [misc]
tests/test_wizard_requirements.py:93: error: "bool" is invalid as return type for "__exit__" that always returns False  [exit-return]
tests/test_wizard_requirements.py:93: note: Use "typing.Literal[False]" as the return type or change it to "None"
tests/test_wizard_requirements.py:93: note: If return type of "__exit__" implies that it may return True, the context manager may swallow exceptions
tests/test_wizard_requirements.py:103: error: Incompatible return value type (got "list[DeltaGenerator]", expected "tuple[object, ...]")  [return-value]
tests/test_wizard_requirements.py:103: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "int | Sequence[int | float]"  [arg-type]
tests/test_wizard_requirements.py:103: error: Argument 2 has incompatible type "**dict[str, object]"; expected "int | Sequence[int | float]"  [arg-type]
tests/test_wizard_requirements.py:103: error: Argument 2 has incompatible type "**dict[str, object]"; expected "Literal['small', 'medium', 'large'] | None"  [arg-type]
tests/test_wizard_requirements.py:103: error: Argument 2 has incompatible type "**dict[str, object]"; expected "Literal['top', 'center', 'bottom']"  [arg-type]
tests/test_wizard_requirements.py:103: error: Argument 2 has incompatible type "**dict[str, object]"; expected "bool"  [arg-type]
tests/test_wizard_requirements.py:103: error: Argument 2 has incompatible type "**dict[str, object]"; expected "int | Literal['stretch']"  [arg-type]
tests/test_wizard_requirements.py:109: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "str"  [arg-type]
tests/test_wizard_requirements.py:109: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "str | int | None"  [arg-type]
tests/test_wizard_requirements.py:109: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "str | None"  [arg-type]
tests/test_wizard_requirements.py:109: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "Callable[..., None] | None"  [arg-type]
tests/test_wizard_requirements.py:109: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "tuple[Any, ...] | list[Any] | None"  [arg-type]
tests/test_wizard_requirements.py:109: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "dict[str, Any] | None"  [arg-type]
tests/test_wizard_requirements.py:109: error: Argument 2 has incompatible type "**dict[str, object]"; expected "str"  [arg-type]
tests/test_wizard_requirements.py:109: error: Argument 2 has incompatible type "**dict[str, object]"; expected "str | int | None"  [arg-type]
tests/test_wizard_requirements.py:109: error: Argument 2 has incompatible type "**dict[str, object]"; expected "str | None"  [arg-type]
tests/test_wizard_requirements.py:109: error: Argument 2 has incompatible type "**dict[str, object]"; expected "Callable[..., None] | None"  [arg-type]
tests/test_wizard_requirements.py:109: error: Argument 2 has incompatible type "**dict[str, object]"; expected "tuple[Any, ...] | list[Any] | None"  [arg-type]
tests/test_wizard_requirements.py:109: error: Argument 2 has incompatible type "**dict[str, object]"; expected "dict[str, Any] | None"  [arg-type]
tests/test_wizard_requirements.py:109: note: "dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
tests/test_wizard_requirements.py:109: note: Consider using "Mapping" instead, which is covariant in the value type
tests/test_wizard_requirements.py:109: error: Argument 2 has incompatible type "**dict[str, object]"; expected "Literal['primary', 'secondary', 'tertiary']"  [arg-type]
tests/test_wizard_requirements.py:109: error: Argument 2 has incompatible type "**dict[str, object]"; expected "bool"  [arg-type]
tests/test_wizard_requirements.py:109: error: Argument 2 has incompatible type "**dict[str, object]"; expected "bool | None"  [arg-type]
tests/test_wizard_requirements.py:109: error: Argument 2 has incompatible type "**dict[str, object]"; expected "Literal['stretch', 'content'] | int"  [arg-type]
tests/test_wizard_requirements.py:160: error: "bool" is invalid as return type for "__exit__" that always returns False  [exit-return]
tests/test_wizard_requirements.py:160: note: Use "typing.Literal[False]" as the return type or change it to "None"
tests/test_wizard_requirements.py:160: note: If return type of "__exit__" implies that it may return True, the context manager may swallow exceptions
tests/test_wizard_requirements.py:173: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "str"  [arg-type]
tests/test_wizard_requirements.py:173: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "str | int | None"  [arg-type]
tests/test_wizard_requirements.py:173: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "str | None"  [arg-type]
tests/test_wizard_requirements.py:173: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "Callable[..., None] | None"  [arg-type]
tests/test_wizard_requirements.py:173: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "tuple[Any, ...] | list[Any] | None"  [arg-type]
tests/test_wizard_requirements.py:173: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "dict[str, Any] | None"  [arg-type]
tests/test_wizard_requirements.py:173: error: Argument 2 has incompatible type "**dict[str, object]"; expected "str"  [arg-type]
tests/test_wizard_requirements.py:173: error: Argument 2 has incompatible type "**dict[str, object]"; expected "str | int | None"  [arg-type]
tests/test_wizard_requirements.py:173: error: Argument 2 has incompatible type "**dict[str, object]"; expected "str | None"  [arg-type]
tests/test_wizard_requirements.py:173: error: Argument 2 has incompatible type "**dict[str, object]"; expected "Callable[..., None] | None"  [arg-type]
tests/test_wizard_requirements.py:173: error: Argument 2 has incompatible type "**dict[str, object]"; expected "tuple[Any, ...] | list[Any] | None"  [arg-type]
tests/test_wizard_requirements.py:173: error: Argument 2 has incompatible type "**dict[str, object]"; expected "dict[str, Any] | None"  [arg-type]
tests/test_wizard_requirements.py:173: note: "dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
tests/test_wizard_requirements.py:173: note: Consider using "Mapping" instead, which is covariant in the value type
tests/test_wizard_requirements.py:173: error: Argument 2 has incompatible type "**dict[str, object]"; expected "Literal['primary', 'secondary', 'tertiary']"  [arg-type]
tests/test_wizard_requirements.py:173: error: Argument 2 has incompatible type "**dict[str, object]"; expected "bool"  [arg-type]
tests/test_wizard_requirements.py:173: error: Argument 2 has incompatible type "**dict[str, object]"; expected "bool | None"  [arg-type]
tests/test_wizard_requirements.py:173: error: Argument 2 has incompatible type "**dict[str, object]"; expected "Literal['stretch', 'content'] | int"  [arg-type]
tests/test_wizard_requirements.py:210: error: Argument 1 to "contextmanager" has incompatible type "Callable[[VarArg(object), KwArg(object)], None]"; expected "Callable[[VarArg(object), KwArg(object)], Iterator[Never]]"  [arg-type]
tests/test_wizard_requirements.py:211: error: The return type of a generator function should be "Generator" or one of its supertypes  [misc]
tests/test_wizard_requirements.py:260: error: "bool" is invalid as return type for "__exit__" that always returns False  [exit-return]
tests/test_wizard_requirements.py:260: note: Use "typing.Literal[False]" as the return type or change it to "None"
tests/test_wizard_requirements.py:260: note: If return type of "__exit__" implies that it may return True, the context manager may swallow exceptions
tests/test_wizard_requirements.py:270: error: Incompatible return value type (got "list[DeltaGenerator]", expected "tuple[object, ...]")  [return-value]
tests/test_wizard_requirements.py:270: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "int | Sequence[int | float]"  [arg-type]
tests/test_wizard_requirements.py:270: error: Argument 2 has incompatible type "**dict[str, object]"; expected "int | Sequence[int | float]"  [arg-type]
tests/test_wizard_requirements.py:270: error: Argument 2 has incompatible type "**dict[str, object]"; expected "Literal['small', 'medium', 'large'] | None"  [arg-type]
tests/test_wizard_requirements.py:270: error: Argument 2 has incompatible type "**dict[str, object]"; expected "Literal['top', 'center', 'bottom']"  [arg-type]
tests/test_wizard_requirements.py:270: error: Argument 2 has incompatible type "**dict[str, object]"; expected "bool"  [arg-type]
tests/test_wizard_requirements.py:270: error: Argument 2 has incompatible type "**dict[str, object]"; expected "int | Literal['stretch']"  [arg-type]
tests/test_wizard_requirements.py:276: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "str"  [arg-type]
tests/test_wizard_requirements.py:276: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "str | int | None"  [arg-type]
tests/test_wizard_requirements.py:276: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "str | None"  [arg-type]
tests/test_wizard_requirements.py:276: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "Callable[..., None] | None"  [arg-type]
tests/test_wizard_requirements.py:276: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "tuple[Any, ...] | list[Any] | None"  [arg-type]
tests/test_wizard_requirements.py:276: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "dict[str, Any] | None"  [arg-type]
tests/test_wizard_requirements.py:276: error: Argument 2 has incompatible type "**dict[str, object]"; expected "str"  [arg-type]
tests/test_wizard_requirements.py:276: error: Argument 2 has incompatible type "**dict[str, object]"; expected "str | int | None"  [arg-type]
tests/test_wizard_requirements.py:276: error: Argument 2 has incompatible type "**dict[str, object]"; expected "str | None"  [arg-type]
tests/test_wizard_requirements.py:276: error: Argument 2 has incompatible type "**dict[str, object]"; expected "Callable[..., None] | None"  [arg-type]
tests/test_wizard_requirements.py:276: error: Argument 2 has incompatible type "**dict[str, object]"; expected "tuple[Any, ...] | list[Any] | None"  [arg-type]
tests/test_wizard_requirements.py:276: error: Argument 2 has incompatible type "**dict[str, object]"; expected "dict[str, Any] | None"  [arg-type]
tests/test_wizard_requirements.py:276: note: "dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
tests/test_wizard_requirements.py:276: note: Consider using "Mapping" instead, which is covariant in the value type
tests/test_wizard_requirements.py:276: error: Argument 2 has incompatible type "**dict[str, object]"; expected "Literal['primary', 'secondary', 'tertiary']"  [arg-type]
tests/test_wizard_requirements.py:276: error: Argument 2 has incompatible type "**dict[str, object]"; expected "bool"  [arg-type]
tests/test_wizard_requirements.py:276: error: Argument 2 has incompatible type "**dict[str, object]"; expected "bool | None"  [arg-type]
tests/test_wizard_requirements.py:276: error: Argument 2 has incompatible type "**dict[str, object]"; expected "Literal['stretch', 'content'] | int"  [arg-type]
tests/test_wizard_requirements.py:298: error: Incompatible types in assignment (expression has type "object", variable has type "str")  [assignment]
tests/test_wizard_requirements.py:387: error: "bool" is invalid as return type for "__exit__" that always returns False  [exit-return]
tests/test_wizard_requirements.py:387: note: Use "typing.Literal[False]" as the return type or change it to "None"
tests/test_wizard_requirements.py:387: note: If return type of "__exit__" implies that it may return True, the context manager may swallow exceptions
tests/test_wizard_requirements.py:400: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "str"  [arg-type]
tests/test_wizard_requirements.py:400: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "str | int | None"  [arg-type]
tests/test_wizard_requirements.py:400: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "str | None"  [arg-type]
tests/test_wizard_requirements.py:400: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "Callable[..., None] | None"  [arg-type]
tests/test_wizard_requirements.py:400: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "tuple[Any, ...] | list[Any] | None"  [arg-type]
tests/test_wizard_requirements.py:400: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "dict[str, Any] | None"  [arg-type]
tests/test_wizard_requirements.py:400: error: Argument 2 has incompatible type "**dict[str, object]"; expected "str"  [arg-type]
tests/test_wizard_requirements.py:400: error: Argument 2 has incompatible type "**dict[str, object]"; expected "str | int | None"  [arg-type]
tests/test_wizard_requirements.py:400: error: Argument 2 has incompatible type "**dict[str, object]"; expected "str | None"  [arg-type]
tests/test_wizard_requirements.py:400: error: Argument 2 has incompatible type "**dict[str, object]"; expected "Callable[..., None] | None"  [arg-type]
tests/test_wizard_requirements.py:400: error: Argument 2 has incompatible type "**dict[str, object]"; expected "tuple[Any, ...] | list[Any] | None"  [arg-type]
tests/test_wizard_requirements.py:400: error: Argument 2 has incompatible type "**dict[str, object]"; expected "dict[str, Any] | None"  [arg-type]
tests/test_wizard_requirements.py:400: note: "dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
tests/test_wizard_requirements.py:400: note: Consider using "Mapping" instead, which is covariant in the value type
tests/test_wizard_requirements.py:400: error: Argument 2 has incompatible type "**dict[str, object]"; expected "Literal['primary', 'secondary', 'tertiary']"  [arg-type]
tests/test_wizard_requirements.py:400: error: Argument 2 has incompatible type "**dict[str, object]"; expected "bool"  [arg-type]
tests/test_wizard_requirements.py:400: error: Argument 2 has incompatible type "**dict[str, object]"; expected "bool | None"  [arg-type]
tests/test_wizard_requirements.py:400: error: Argument 2 has incompatible type "**dict[str, object]"; expected "Literal['stretch', 'content'] | int"  [arg-type]
tests/test_wizard_requirements.py:403: error: Argument 1 to "len" has incompatible type "object"; expected "Sized"  [arg-type]
tests/test_wizard_requirements.py:476: error: "bool" is invalid as return type for "__exit__" that always returns False  [exit-return]
tests/test_wizard_requirements.py:476: note: Use "typing.Literal[False]" as the return type or change it to "None"
tests/test_wizard_requirements.py:476: note: If return type of "__exit__" implies that it may return True, the context manager may swallow exceptions
tests/test_wizard_requirements.py:489: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "str"  [arg-type]
tests/test_wizard_requirements.py:489: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "str | int | None"  [arg-type]
tests/test_wizard_requirements.py:489: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "str | None"  [arg-type]
tests/test_wizard_requirements.py:489: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "Callable[..., None] | None"  [arg-type]
tests/test_wizard_requirements.py:489: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "tuple[Any, ...] | list[Any] | None"  [arg-type]
tests/test_wizard_requirements.py:489: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "dict[str, Any] | None"  [arg-type]
tests/test_wizard_requirements.py:489: error: Argument 2 has incompatible type "**dict[str, object]"; expected "str"  [arg-type]
tests/test_wizard_requirements.py:489: error: Argument 2 has incompatible type "**dict[str, object]"; expected "str | int | None"  [arg-type]
tests/test_wizard_requirements.py:489: error: Argument 2 has incompatible type "**dict[str, object]"; expected "str | None"  [arg-type]
tests/test_wizard_requirements.py:489: error: Argument 2 has incompatible type "**dict[str, object]"; expected "Callable[..., None] | None"  [arg-type]
tests/test_wizard_requirements.py:489: error: Argument 2 has incompatible type "**dict[str, object]"; expected "tuple[Any, ...] | list[Any] | None"  [arg-type]
tests/test_wizard_requirements.py:489: error: Argument 2 has incompatible type "**dict[str, object]"; expected "dict[str, Any] | None"  [arg-type]
tests/test_wizard_requirements.py:489: note: "dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
tests/test_wizard_requirements.py:489: note: Consider using "Mapping" instead, which is covariant in the value type
tests/test_wizard_requirements.py:489: error: Argument 2 has incompatible type "**dict[str, object]"; expected "Literal['primary', 'secondary', 'tertiary']"  [arg-type]
tests/test_wizard_requirements.py:489: error: Argument 2 has incompatible type "**dict[str, object]"; expected "bool"  [arg-type]
tests/test_wizard_requirements.py:489: error: Argument 2 has incompatible type "**dict[str, object]"; expected "bool | None"  [arg-type]
tests/test_wizard_requirements.py:489: error: Argument 2 has incompatible type "**dict[str, object]"; expected "Literal['stretch', 'content'] | int"  [arg-type]
tests/test_wizard_requirements.py:492: error: Argument 1 to "len" has incompatible type "object"; expected "Sized"  [arg-type]
tests/test_wizard_requirements.py:574: error: "bool" is invalid as return type for "__exit__" that always returns False  [exit-return]
tests/test_wizard_requirements.py:574: note: Use "typing.Literal[False]" as the return type or change it to "None"
tests/test_wizard_requirements.py:574: note: If return type of "__exit__" implies that it may return True, the context manager may swallow exceptions
tests/test_wizard_requirements.py:587: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "str"  [arg-type]
tests/test_wizard_requirements.py:587: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "str | int | None"  [arg-type]
tests/test_wizard_requirements.py:587: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "str | None"  [arg-type]
tests/test_wizard_requirements.py:587: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "Callable[..., None] | None"  [arg-type]
tests/test_wizard_requirements.py:587: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "tuple[Any, ...] | list[Any] | None"  [arg-type]
tests/test_wizard_requirements.py:587: error: Argument 1 has incompatible type "*tuple[object, ...]"; expected "dict[str, Any] | None"  [arg-type]
tests/test_wizard_requirements.py:587: error: Argument 2 has incompatible type "**dict[str, object]"; expected "str"  [arg-type]
tests/test_wizard_requirements.py:587: error: Argument 2 has incompatible type "**dict[str, object]"; expected "str | int | None"  [arg-type]
tests/test_wizard_requirements.py:587: error: Argument 2 has incompatible type "**dict[str, object]"; expected "str | None"  [arg-type]
tests/test_wizard_requirements.py:587: error: Argument 2 has incompatible type "**dict[str, object]"; expected "Callable[..., None] | None"  [arg-type]
tests/test_wizard_requirements.py:587: error: Argument 2 has incompatible type "**dict[str, object]"; expected "tuple[Any, ...] | list[Any] | None"  [arg-type]
tests/test_wizard_requirements.py:587: error: Argument 2 has incompatible type "**dict[str, object]"; expected "dict[str, Any] | None"  [arg-type]
tests/test_wizard_requirements.py:587: note: "dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
tests/test_wizard_requirements.py:587: note: Consider using "Mapping" instead, which is covariant in the value type
tests/test_wizard_requirements.py:587: error: Argument 2 has incompatible type "**dict[str, object]"; expected "Literal['primary', 'secondary', 'tertiary']"  [arg-type]
tests/test_wizard_requirements.py:587: error: Argument 2 has incompatible type "**dict[str, object]"; expected "bool"  [arg-type]
tests/test_wizard_requirements.py:587: error: Argument 2 has incompatible type "**dict[str, object]"; expected "bool | None"  [arg-type]
tests/test_wizard_requirements.py:587: error: Argument 2 has incompatible type "**dict[str, object]"; expected "Literal['stretch', 'content'] | int"  [arg-type]
tests/test_wizard_requirements.py:590: error: Argument 1 to "len" has incompatible type "object"; expected "Sized"  [arg-type]
tests/test_wizard_position.py:15: error: Module "wizard" has no attribute "_apply_esco_selection"  [attr-defined]
tests/test_wizard_position.py:15: error: Module "wizard" has no attribute "_render_esco_occupation_selector"  [attr-defined]
tests/test_wizard_position.py:25: error: "bool" is invalid as return type for "__exit__" that always returns False  [exit-return]
tests/test_wizard_position.py:25: note: Use "typing.Literal[False]" as the return type or change it to "None"
tests/test_wizard_position.py:25: note: If return type of "__exit__" implies that it may return True, the context manager may swallow exceptions
tests/test_wizard_phases.py:11: error: Module "wizard" has no attribute "_filter_existing_participants"  [attr-defined]
tests/test_wizard_navigation.py:23: error: "bool" is invalid as return type for "__exit__" that always returns False  [exit-return]
tests/test_wizard_navigation.py:23: note: Use "typing.Literal[False]" as the return type or change it to "None"
tests/test_wizard_navigation.py:23: note: If return type of "__exit__" implies that it may return True, the context manager may swallow exceptions
tests/test_wizard_navigation.py:50: error: "bool" is invalid as return type for "__exit__" that always returns False  [exit-return]
tests/test_wizard_navigation.py:50: note: Use "typing.Literal[False]" as the return type or change it to "None"
tests/test_wizard_navigation.py:50: note: If return type of "__exit__" implies that it may return True, the context manager may swallow exceptions
tests/test_wizard_navigation.py:55: error: The return type of a generator function should be "Generator" or one of its supertypes  [misc]
tests/test_wizard_navigation.py:171: error: Need type annotation for "missing_ref"  [var-annotated]
tests/test_wizard_navigation.py:215: error: Need type annotation for "missing_ref"  [var-annotated]
tests/test_wizard_navigation.py:252: error: Need type annotation for "missing_ref"  [var-annotated]
tests/test_wizard_logo.py:7: error: Module "wizard" has no attribute "_summary_company"  [attr-defined]
tests/test_wizard_localization.py:27: error: Module "wizard" has no attribute "STEP_RENDERERS"  [attr-defined]
tests/test_wizard_localization.py:27: error: Module "wizard" has no attribute "_step_compensation"  [attr-defined]
tests/test_wizard_localization.py:27: error: Module "wizard" has no attribute "_summary_compensation"  [attr-defined]
tests/test_wizard_localization.py:27: error: Module "wizard" has no attribute "run_wizard"  [attr-defined]
tests/test_wizard_localization.py:248: error: "append" of "list" does not return a value (it only ever returns None)  [func-returns-value]
tests/test_wizard_localization.py:287: error: Value of type "object" is not indexable  [index]
tests/test_wizard_localization.py:288: error: Value of type "object" is not indexable  [index]
tests/test_wizard_localization.py:291: error: Value of type "object" is not indexable  [index]
tests/test_wizard_localization.py:292: error: Value of type "object" is not indexable  [index]
tests/test_wizard_localization.py:295: error: Value of type "object" is not indexable  [index]
tests/test_wizard_localization.py:296: error: Value of type "object" is not indexable  [index]
tests/test_wizard_localization.py:299: error: Value of type "object" is not indexable  [index]
tests/test_wizard_localization.py:300: error: Value of type "object" is not indexable  [index]
tests/test_wizard_intro.py:12: error: Module "wizard" has no attribute "_step_onboarding"  [attr-defined]
tests/test_wizard_compensation.py:11: error: Module "wizard" has no attribute "_generate_local_benefits"  [attr-defined]
tests/test_wizard_compensation.py:11: error: Module "wizard" has no attribute "_step_compensation"  [attr-defined]
tests/test_wizard_compensation.py:63: error: Unused "type: ignore" comment  [unused-ignore]
tests/test_summary_followup_regeneration.py:17: error: Module "wizard" has no attribute "BOOLEAN_WIDGET_KEYS"  [attr-defined]
tests/test_summary_followup_regeneration.py:17: error: Module "wizard" has no attribute "_apply_followup_updates"  [attr-defined]
tests/test_summary_followup_regeneration.py:17: error: Module "wizard" has no attribute "_boolean_widget_key"  [attr-defined]
tests/test_summary_followup_regeneration.py:17: error: Module "wizard" has no attribute "_render_boolean_interactive_section"  [attr-defined]
tests/test_summary_followup_regeneration.py:17: error: Module "wizard" has no attribute "build_boolean_query"  [attr-defined]
tests/test_summary_followup_regeneration.py:46: error: Need type annotation for "filtered_profile"  [var-annotated]
tests/test_summary_followup_regeneration.py:47: error: Need type annotation for "profile_payload"  [var-annotated]
tests/test_summary_followup_regeneration.py:72: error: Value of type "object" is not indexable  [index]
tests/test_summary_followup_regeneration.py:134: error: Value of type variable "SupportsRichComparisonT" of "sorted" cannot be "str | None"  [type-var]
tests/test_required_indicator.py:1: error: Module "wizard" has no attribute "REQUIRED_PREFIX"  [attr-defined]
tests/test_required_indicator.py:1: error: Module "wizard" has no attribute "REQUIRED_SUFFIX"  [attr-defined]
tests/test_missing_critical_fields.py:8: error: Module "wizard" has no attribute "FIELD_SECTION_MAP"  [attr-defined]
tests/test_missing_critical_fields.py:8: error: Module "wizard" has no attribute "get_missing_critical_fields"  [attr-defined]
tests/test_job_ad_fields.py:6: error: Module "wizard" has no attribute "_job_ad_field_entries"  [attr-defined]
tests/test_job_ad_fields.py:6: error: Module "wizard" has no attribute "_prepare_job_ad_data"  [attr-defined]
tests/test_followup_inline.py:5: error: Module "wizard" has no attribute "FIELD_SECTION_MAP"  [attr-defined]
tests/test_followup_inline.py:5: error: Module "wizard" has no attribute "_get_profile_state"  [attr-defined]
tests/test_followup_inline.py:5: error: Module "wizard" has no attribute "_render_followup_question"  [attr-defined]
tests/test_followup_inline.py:5: error: Module "wizard" has no attribute "_render_followups_for_section"  [attr-defined]
tests/test_followup_inline.py:5: error: Module "wizard" has no attribute "get_missing_critical_fields"  [attr-defined]
tests/test_field_sources.py:10: error: Module "wizard" has no attribute "_field_lock_config"  [attr-defined]
tests/test_field_sources.py:10: error: Module "wizard" has no attribute "_summary_source_icon_html"  [attr-defined]
tests/test_field_section_map.py:3: error: Module "wizard" has no attribute "FIELD_SECTION_MAP"  [attr-defined]
tests/test_field_labels.py:5: error: Module "wizard" has no attribute "_field_label"  [attr-defined]
tests/test_field_labels.py:5: error: Module "wizard" has no attribute "_step_summary"  [attr-defined]
tests/test_company_size.py:12: error: Module "wizard" has no attribute "_extract_company_size"  [attr-defined]
tests/test_company_research.py:18: error: Module "wizard" has no attribute "_CompanySectionConfig"  [attr-defined]
tests/test_company_research.py:18: error: Module "wizard" has no attribute "_candidate_company_page_urls"  [attr-defined]
tests/test_company_research.py:18: error: Module "wizard" has no attribute "_bulk_fetch_company_sections"  [attr-defined]
tests/test_company_research.py:18: error: Module "wizard" has no attribute "_enrich_company_profile_from_about"  [attr-defined]
tests/test_company_research.py:18: error: Module "wizard" has no attribute "_enrich_company_profile_via_web"  [attr-defined]
tests/test_company_research.py:18: error: Module "wizard" has no attribute "_extract_company_size"  [attr-defined]
tests/test_company_research.py:18: error: Module "wizard" has no attribute "_fetch_company_page"  [attr-defined]
tests/test_company_research.py:18: error: Module "wizard" has no attribute "_load_company_page_section"  [attr-defined]
tests/test_company_research.py:18: error: Module "wizard" has no attribute "_normalise_company_base_url"  [attr-defined]
tests/test_company_research.py:18: error: Module "wizard" has no attribute "_store_company_page_section"  [attr-defined]
tests/test_company_research.py:331: error: Argument "response" to "HTTPError" has incompatible type "RedirectResponse"; expected "Response | None"  [arg-type]
tests/test_autodetect_lang.py:5: error: Module "wizard" has no attribute "_autodetect_lang"  [attr-defined]
sidebar/__init__.py:52: error: Module "wizard" has no attribute "FIELD_SECTION_MAP"  [attr-defined]
sidebar/__init__.py:52: error: Module "wizard" has no attribute "get_missing_critical_fields"  [attr-defined]
sidebar/__init__.py:329: error: Function "streamlit.navigation.page.Page" is not valid as a type  [valid-type]
sidebar/__init__.py:329: note: Perhaps you need "Callable[...]" or a callback protocol?
sidebar/__init__.py:353: error: Function "streamlit.navigation.page.Page" is not valid as a type  [valid-type]
sidebar/__init__.py:353: note: Perhaps you need "Callable[...]" or a callback protocol?
sidebar/__init__.py:578: error: Incompatible return value type (got "tuple[int, ...]", expected "tuple[int, int, int] | None")  [return-value]
sidebar/__init__.py:819: error: Incompatible types in assignment (expression has type "str | None", variable has type "str")  [assignment]
sidebar/__init__.py:1165: error: Argument "type" has incompatible type "str"; expected "Literal['primary', 'secondary', 'tertiary']"  [arg-type]
app.py:62: error: Module "wizard" has no attribute "run_wizard"  [attr-defined]
tests/sidebar/test_branding_overrides.py:64: error: Argument "company" to "NeedAnalysisProfile" has incompatible type "dict[str, str]"; expected "Company"  [arg-type]
Found 342 errors in 60 files (checked 255 source files)
