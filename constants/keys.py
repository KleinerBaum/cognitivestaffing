from enum import StrEnum


class UIKeys:
    """Keys for UI widgets in ``st.session_state``."""

    PROFILE_TEXT_INPUT = "ui.profile_text_input"
    PROFILE_FILE_UPLOADER = "ui.profile_file_uploader"
    PROFILE_URL_INPUT = "ui.profile_url_input"
    LANG_SELECT = "ui.lang_select"
    INPUT_METHOD = "ui.input_method"
    COMPANY_LOGO = "ui.company_logo"
    MODEL_SELECT = "ui.model_select"
    VERBOSITY_SELECT = "ui.verbosity_select"
    REASONING_SELECT = "ui.reasoning_select"
    SALARY_ESTIMATE = "ui.salary.estimate"
    SALARY_REFRESH = "ui.salary.refresh"
    SALARY_EXPLANATION = "ui.salary.explanation"
    SALARY_EXPLANATION_BUTTON = "ui.salary.explanation_button"
    TONE_SELECT = "ui.summary.tone"
    NUM_QUESTIONS = "ui.summary.num_questions"
    AUDIENCE_SELECT = "ui.summary.audience"
    JOB_AD_OUTPUT = "ui.summary.job_ad_output"
    INTERVIEW_OUTPUT = "ui.summary.interview_output"
    JOB_AD_FIELD_PREFIX = "ui.job_ad.field."
    JOB_AD_STEP_SELECT = "ui.job_ad.step_select"
    JOB_AD_STEP_FIELD_PREFIX = "ui.job_ad.step_field."
    JOB_AD_FIELD_OVERVIEW = "ui.job_ad.overview"
    JOB_AD_TARGET_SELECT = "ui.job_ad.target"
    JOB_AD_CUSTOM_TARGET = "ui.job_ad.custom_target"
    JOB_AD_MANUAL_TITLE = "ui.job_ad.manual_title"
    JOB_AD_MANUAL_TEXT = "ui.job_ad.manual_text"
    JOB_AD_FEEDBACK = "ui.job_ad.feedback"
    REFINE_JOB_AD = "ui.job_ad.refine"
    REQUIREMENTS_OCC_SEARCH = "ui.requirements.occupation_search"
    REQUIREMENTS_OCC_SELECT = "ui.requirements.occupation_select"
    REQUIREMENTS_SHOW_ALL_ESCO = "ui.requirements.show_all_esco"
    REQUIREMENTS_ESCO_SKILL_SELECT = "ui.requirements.esco_skill_select"
    REQUIREMENTS_FETCH_AI_SUGGESTIONS = "ui.requirements.fetch_ai_suggestions"
    REQUIREMENTS_FETCH_ESCO_SUGGESTIONS = "ui.requirements.fetch_esco_suggestions"
    RESPONSIBILITY_SUGGEST = "ui.requirements.responsibilities.suggest"
    POSITION_ESCO_OCCUPATION = "ui.position.esco_occupation"
    JOB_AD_FONT = "ui.job_ad.font"
    JOB_AD_FORMAT = "ui.job_ad.format"
    JOB_AD_LOGO_UPLOAD = "ui.job_ad.logo_upload"
    INTERVIEW_FORMAT = "ui.summary.interview_format"
    SUMMARY_SELECTED_GROUP = "ui.summary.selected_group"
    COMPANY_HQ_LOCATION = "ui.company.hq_location"
    # BRANDING_UPLOAD_KEY_FIX
    COMPANY_BRANDING_UPLOAD = "ui.company.branding_upload:sidebar"
    COMPANY_BRANDING_UPLOAD_LEGACY = "ui.company.branding_upload.legacy"
    COMPANY_BRAND_KEYWORDS = "ui.summary.company.brand_keywords"
    JOB_AD_BRAND_TONE = "ui.summary.job_ad.brand_keywords"
    JOB_AD_BRAND_TONE_INPUT = "ui.summary.job_ad.brand_keywords.input"
    JOB_AD_BRAND_TONE_SYNC_FLAG = "ui.summary.job_ad.brand_keywords.sync"


class ProfilePaths(StrEnum):
    """Canonical dot-paths for profile-bound wizard widgets."""

    COMPANY_BRAND_COLOR = "company.brand_color"
    COMPANY_BRAND_KEYWORDS = "company.brand_keywords"
    COMPANY_BRAND_NAME = "company.brand_name"
    COMPANY_CLAIM = "company.claim"
    COMPANY_CONTACT_EMAIL = "company.contact_email"
    COMPANY_CONTACT_NAME = "company.contact_name"
    COMPANY_CONTACT_PHONE = "company.contact_phone"
    COMPANY_CULTURE = "company.culture"
    COMPANY_HQ_LOCATION = "company.hq_location"
    COMPANY_INDUSTRY = "company.industry"
    COMPANY_LOGO_URL = "company.logo_url"
    COMPANY_MISSION = "company.mission"
    COMPANY_NAME = "company.name"
    COMPANY_SIZE = "company.size"
    COMPANY_WEBSITE = "company.website"
    COMPENSATION_BENEFITS = "compensation.benefits"
    COMPENSATION_BONUS_PERCENTAGE = "compensation.bonus_percentage"
    COMPENSATION_COMMISSION_STRUCTURE = "compensation.commission_structure"
    COMPENSATION_CURRENCY = "compensation.currency"
    COMPENSATION_EQUITY_OFFERED = "compensation.equity_offered"
    COMPENSATION_PERIOD = "compensation.period"
    COMPENSATION_SALARY_MAX = "compensation.salary_max"
    COMPENSATION_SALARY_MIN = "compensation.salary_min"
    COMPENSATION_SALARY_PROVIDED = "compensation.salary_provided"
    COMPENSATION_VARIABLE_PAY = "compensation.variable_pay"
    EMPLOYMENT_CONTRACT_END = "employment.contract_end"
    EMPLOYMENT_CONTRACT_TYPE = "employment.contract_type"
    EMPLOYMENT_JOB_TYPE = "employment.job_type"
    EMPLOYMENT_OVERTIME_EXPECTED = "employment.overtime_expected"
    EMPLOYMENT_RELOCATION_DETAILS = "employment.relocation_details"
    EMPLOYMENT_RELOCATION_SUPPORT = "employment.relocation_support"
    EMPLOYMENT_REMOTE_PERCENTAGE = "employment.remote_percentage"
    EMPLOYMENT_SECURITY_CLEARANCE_REQUIRED = "employment.security_clearance_required"
    EMPLOYMENT_SHIFT_WORK = "employment.shift_work"
    EMPLOYMENT_TRAVEL_CONTINENTS = "employment.travel_continents"
    EMPLOYMENT_TRAVEL_DETAILS = "employment.travel_details"
    EMPLOYMENT_TRAVEL_REGION_SCOPE = "employment.travel_region_scope"
    EMPLOYMENT_TRAVEL_REGIONS = "employment.travel_regions"
    EMPLOYMENT_TRAVEL_REQUIRED = "employment.travel_required"
    EMPLOYMENT_TRAVEL_SHARE = "employment.travel_share"
    EMPLOYMENT_VISA_SPONSORSHIP = "employment.visa_sponsorship"
    EMPLOYMENT_WORK_POLICY = "employment.work_policy"
    EMPLOYMENT_WORK_SCHEDULE = "employment.work_schedule"
    LOCATION_COUNTRY = "location.country"
    LOCATION_ONSITE_RATIO = "location.onsite_ratio"
    LOCATION_PRIMARY_CITY = "location.primary_city"
    META_APPLICATION_DEADLINE = "meta.application_deadline"
    META_FOLLOWUPS_ANSWERED = "meta.followups_answered"
    META_TARGET_START_DATE = "meta.target_start_date"
    POSITION_DECISION_AUTHORITY = "position.decision_authority"
    POSITION_DEPARTMENT = "position.department"
    POSITION_JOB_TITLE = "position.job_title"
    POSITION_KEY_PROJECTS = "position.key_projects"
    POSITION_OCCUPATION_GROUP = "position.occupation_group"
    POSITION_OCCUPATION_LABEL = "position.occupation_label"
    POSITION_OCCUPATION_URI = "position.occupation_uri"
    POSITION_PERFORMANCE_INDICATORS = "position.performance_indicators"
    POSITION_REPORTING_LINE = "position.reporting_line"
    POSITION_REPORTING_MANAGER_NAME = "position.reporting_manager_name"
    POSITION_ROLE_SUMMARY = "position.role_summary"
    POSITION_SENIORITY = "position.seniority_level"
    POSITION_SUPERVISES = "position.supervises"
    POSITION_TEAM_SIZE = "position.team_size"
    POSITION_TEAM_STRUCTURE = "position.team_structure"
    PROCESS_APPLICATION_INSTRUCTIONS = "process.application_instructions"
    PROCESS_HIRING_MANAGER_NAME = "process.hiring_manager_name"
    PROCESS_HIRING_MANAGER_ROLE = "process.hiring_manager_role"
    PROCESS_INTERVIEW_STAGES = "process.interview_stages"
    PROCESS_ONBOARDING_PROCESS = "process.onboarding_process"
    PROCESS_PHASES = "process.phases"
    PROCESS_PROCESS_NOTES = "process.process_notes"
    PROCESS_RECRUITMENT_TIMELINE = "process.recruitment_timeline"
    PROCESS_STAKEHOLDERS = "process.stakeholders"
    REQUIREMENTS_CERTIFICATES = "requirements.certificates"
    REQUIREMENTS_CERTIFICATIONS = "requirements.certifications"
    REQUIREMENTS_HARD_SKILLS_OPTIONAL = "requirements.hard_skills_optional"
    REQUIREMENTS_HARD_SKILLS_REQUIRED = "requirements.hard_skills_required"
    REQUIREMENTS_LANGUAGE_LEVEL_ENGLISH = "requirements.language_level_english"
    REQUIREMENTS_LANGUAGES_OPTIONAL = "requirements.languages_optional"
    REQUIREMENTS_LANGUAGES_REQUIRED = "requirements.languages_required"
    REQUIREMENTS_SOFT_SKILLS_OPTIONAL = "requirements.soft_skills_optional"
    REQUIREMENTS_SOFT_SKILLS_REQUIRED = "requirements.soft_skills_required"
    REQUIREMENTS_TOOLS_AND_TECHNOLOGIES = "requirements.tools_and_technologies"
    RESPONSIBILITIES_ITEMS = "responsibilities.items"


class StateKeys:
    """Keys for data stored in ``st.session_state``."""

    PROFILE = "profile_data"
    RAW_TEXT = "profile_raw_text"
    RAW_BLOCKS = "profile_raw_blocks"
    STEP = "current_step"
    SCROLL_TO_TOP = "ui.scroll_to_top"
    FOLLOWUPS = "followup_questions"
    FOLLOWUPS_RESPONSE_ID = "followups.response_id"
    RAG_CONTEXT_SKIPPED = "followups.rag_skipped"
    AUTOFILL_DECISIONS = "autofill_decisions"
    USAGE = "api_usage"
    JOB_AD_MD = "data.job_ad_md"
    BOOLEAN_STR = "data.boolean_str"
    INTERVIEW_GUIDE_MD = "data.interview_md"
    INTERVIEW_GUIDE_DATA = "data.interview_guide"
    SKILL_SUGGESTIONS = "skill_suggestions"
    SKILL_SUGGESTION_HINTS = "skill_suggestion_hints"
    SKILL_BOARD_STATE = "ui.requirements.skill_board"
    SKILL_BOARD_META = "ui.requirements.skill_board_meta"
    REQUIREMENTS_ESCO_OPT_IN = "requirements.esco_opt_in"
    BENEFIT_SUGGESTIONS = "benefit_suggestions"
    BENEFIT_SUGGESTION_HINTS = "benefit_suggestion_hints"
    RESPONSIBILITY_SUGGESTIONS = "responsibility_suggestions"
    LOCAL_BENEFIT_SUGGESTIONS = "benefit_suggestions.local"
    LOCAL_BENEFIT_CONTEXT = "benefit_suggestions.local_context"
    ONBOARDING_SUGGESTIONS = "onboarding_suggestions"
    EXTRACTION_SUMMARY = "extraction_summary"
    EXTRACTION_MISSING = "extraction_missing"
    EXTRACTION_RAW_PROFILE = "extraction_raw_profile"
    PROFILE_METADATA = "profile_metadata"
    ESCO_SKILLS = "extraction_esco_skills"
    ESCO_MISSING_SKILLS = "extraction_esco_missing_skills"
    # NOTE: ``ESCO_OCCUPATION_OPTIONS`` was historically reused for both the
    # extraction snapshot and the UI cache.  The names were split in 2024-08 to
    # prevent UI refreshes from wiping extraction results.  Keep the
    # ``EXTRACTION_*`` key for data snapshots and the ``UI_*`` key for the
    # interactive picker cache.
    EXTRACTION_ESCO_OCCUPATION_OPTIONS = "extraction_esco_occupation_options"
    ESCO_SELECTED_OCCUPATIONS = "data.esco_selected_occupations"
    BIAS_FINDINGS = "data.bias_findings"
    SKILL_BUCKETS = "skill_buckets"
    COMPANY_PAGE_SUMMARIES = "company.page_summaries"
    COMPANY_PAGE_BASE = "company.page_base_url"
    COMPANY_PAGE_TEXT_CACHE = "company.page_text_cache"
    COMPANY_INFO_CACHE = "company.info_cache"
    COMPANY_BRANDING_ASSET = "company.branding_asset"

    JOB_AD_SELECTED_FIELDS = "data.job_ad.selected_fields"
    JOB_AD_SELECTED_VALUES = "data.job_ad.selected_values"
    JOB_AD_MANUAL_ENTRIES = "data.job_ad.manual_entries"
    JOB_AD_SELECTED_AUDIENCE = "data.job_ad.selected_audience"
    JOB_AD_FONT_CHOICE = "data.job_ad.font"
    JOB_AD_LOGO_DATA = "data.job_ad.logo"
    INTERVIEW_AUDIENCE = "data.interview.audience"
    UI_ESCO_OCCUPATION_OPTIONS = "data.esco_occupation_options"
    UI_ESCO_OCCUPATION_OVERRIDE = "ui.esco_occupation_override"
    # Backwards compatibility for legacy imports; prefer
    # ``UI_ESCO_OCCUPATION_OPTIONS`` going forward.
    ESCO_OCCUPATION_OPTIONS = UI_ESCO_OCCUPATION_OPTIONS
    SUMMARY_FOLLOWUP_SNAPSHOT = "data.summary.followup_snapshot"
    SUMMARY_SELECTED_GROUP = UIKeys.SUMMARY_SELECTED_GROUP
    COMPLETED_SECTIONS = "wizard.completed_sections"
    FIRST_INCOMPLETE_SECTION = "wizard.first_incomplete_section"
    PENDING_INCOMPLETE_JUMP = "wizard.pending_incomplete_jump"
    WIZARD_STEP_COUNT = "wizard.step_count"
    STEPPER_WARNING = "wizard.stepper_warning"
    WIZARD_AUTOFILL_DECISIONS = "wizard.autofill_decisions"


def _collect_ui_keys() -> tuple[str, ...]:
    """Return the canonical set of UI widget keys."""

    values: list[str] = []
    for attribute in dir(UIKeys):
        if attribute.startswith("_"):
            continue
        candidate = getattr(UIKeys, attribute)
        if isinstance(candidate, str):
            values.append(candidate)
    return tuple(sorted(values))


# ``UI_KEYS_CANONICAL`` documents the canonical widget identifiers for migrations/tests.  # UI_KEYS_CANONICAL
UI_KEYS_CANONICAL: tuple[str, ...] = _collect_ui_keys()
